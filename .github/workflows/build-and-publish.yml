name: Build and publish open3e distribution

on:
  push:
    # TODO: restrict branches?
    #branches:
    #  - master

jobs:
  python-build:
    runs-on: ubuntu-latest

    outputs:
      build_version: ${{ steps.project-version.outputs.PROJECT_VERSION }}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - id: project-version
        name: Extract project version
        run: |
          version=$(grep -Po '(?<=^version = ")[^"]+' pyproject.toml)
          echo "PROJECT_VERSION=$version" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user

      - name: Build a binary wheel and a source tarball
        run: python3 -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest

    # TODO: define when to publish? for example using git tags
    if: github.ref == 'refs/heads/automated-build-publish'

    permissions:
      id-token: write # https://docs.pypi.org/trusted-publishers/

    needs:
      - python-build

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # TODO: switch to pypi.org for release builds. use test.pypi for non release builds?
          repository-url: https://test.pypi.org/legacy/

  github-release:
    runs-on: ubuntu-latest

    needs:
      - python-build
      - pypi-publish

    permissions:
      contents: write  # mandatory for making GitHub Releases
      id-token: write  # mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          BUILD_VERSION: ${{needs.python-build.outputs.build_version}}
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$BUILD_VERSION"
          --repo "$GITHUB_REPOSITORY"
          --notes ""

      - name: Upload artifacts and signatures to GitHub Release
        env:
          BUILD_VERSION: ${{needs.python-build.outputs.build_version}}
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          "$BUILD_VERSION" dist/**
          --repo "$GITHUB_REPOSITORY"